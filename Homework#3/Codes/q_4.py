# -*- coding: utf-8 -*-
"""Q#4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dYSDz_xMJCLOkss26pk-ppXmcos1ZUrB
"""

import cvxpy as cp

def get_solved_problem(obj, x1, x2):

    constraints = [
        2 * x1 + x2 >= 1,
        x1 + 3 * x2 >= 1,
        x1 >= 0,
        x2 >= 0
    ]

    prob = cp.Problem(obj, constraints)
    prob.solve()

    return prob, (x1, x2)

"""#(a)"""

x1, x2 = cp.Variable(), cp.Variable()
obj = cp.Minimize(x1+x2)
solved_problem, optimal_variables = get_solved_problem(obj, x1, x2)

print("status:", solved_problem.status)
print("optimal value:", solved_problem.value)
print("optimal vars: ({} , {})".format(
    optimal_variables[0].value,
    optimal_variables[1].value
))

"""#(b)"""

x1, x2 = cp.Variable(), cp.Variable()
obj = cp.Minimize(-x1-x2)
solved_problem, optimal_variables = get_solved_problem(obj, x1, x2)

print("status:", solved_problem.status)
print("optimal value:", solved_problem.value)
print("optimal vars: ({} , {})".format(
    optimal_variables[0].value,
    optimal_variables[1].value
))

"""#(c)"""

x1, x2 = cp.Variable(), cp.Variable()
obj = cp.Minimize(x1)
solved_problem, optimal_variables = get_solved_problem(obj, x1, x2)

print("status:", solved_problem.status)
print("optimal value:", solved_problem.value)
print("optimal vars: ({} , {})".format(
    optimal_variables[0].value,
    optimal_variables[1].value
))

"""#(d)"""

x1, x2, x3 = cp.Variable(), cp.Variable(), cp.Variable()

constraints = [
    2 * x1 + x2 >= 1,
    x1 + 3 * x2 >= 1,
    x1 >= 0,
    x2 >= 0,
    x3 >= x1,
    x3 >= x2
]

obj = cp.Minimize(x3)
prob = cp.Problem(obj, constraints)
prob.solve()

print("status:", prob.status)
print("optimal value:", prob.value)
print("optimal vars: ({} , {})".format(
    x1.value,
    x2.value
))

"""#(e)"""

x1, x2 = cp.Variable(), cp.Variable()
obj = cp.Minimize(x1**2+9*x2**2)
solved_problem, optimal_variables = get_solved_problem(obj, x1, x2)

print("status:", solved_problem.status)
print("optimal value:", solved_problem.value)
print("optimal vars: ({} , {})".format(
    optimal_variables[0].value,
    optimal_variables[1].value
))